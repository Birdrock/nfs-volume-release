#!/usr/bin/env bash
<% if p('nfsbroker.release_level_backup') %>

set -ex

PATH="/var/vcap/packages/cf-cli-6-linux/bin:$PATH"

API_ENDPOINT=https://api.<%= p('nfsbroker.domain') %>
ORG=<%= p('nfsbroker.organization') %>
SPACE=<%= p('nfsbroker.space') %>
APP_NAME=<%= p('nfsbroker.app_name') %>
export CF_HOME=/var/vcap/data/nfsbrokerbbr_$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 6 | head -n 1)/
mkdir -p $CF_HOME


function cf_auth_and_target() {
	echo "Authenticate and target..."

	cf api $API_ENDPOINT <% if p('nfsbroker.skip_cert_verify') %>--skip-ssl-validation<% end %>

    set +x
	<% if_p('nfsbroker.cf.client_id', 'nfsbroker.cf.client_secret') do |client_id, client_secret| %>
        cf auth "<%= client_id %>" "<%= client_secret %>" --client-credentials
    <% end.else do %>
        cf auth "<%= p('nfsbroker.cf.admin_user') %>" "<%= p('nfsbroker.cf.admin_password') %>"
    <% end %>
	set -x
	echo -e  "********************\n"

	if ! cf target -o $ORG -s $SPACE ; then
		echo "org '$ORG' with space '$SPACE' not found; exiting"
		exit 0
	fi

	if ! cf app $APP_NAME ; then
		echo "'$APP_NAME' app not deployed; exiting"
		exit 0
	fi
}

cf_auth_and_target

if [[ -x /var/vcap/jobs/nfsbrokerpush/bin/run ]]; then
    echo "\"nfsbrokerpush\" errand found: running"
    /var/vcap/jobs/nfsbrokerpush/bin/run
    echo "\"nfsbrokerpush\" errand found: finished"
else
    echo "\"nfsbrokerpush\" errand not found: starting app"
    cf start $APP_NAME
    echo "\"nfsbrokerpush\" errand found: finished"
fi

<% else %>
    echo "script deactivated due to release_level_backup being set to FALSE\n"
<% end %>