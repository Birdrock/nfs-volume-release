---
name: nfsbrokerpush

templates:
  deploy.sh.erb: bin/run
  manifest.yml.erb: manifest.yml
  Procfile.erb: Procfile
  db_ca.crt.erb: db_ca.crt
  sql.json.erb: sql.json
  credhub.json.erb: credhub.json
  services.json.erb: config/services.json
  start.sh.erb: start.sh

packages:
  - nfsbroker
  - golang-nfsvolume

consumes:
  - name: database
    type: database
    optional: true

properties:
  nfsbrokerpush.domain:
    description: 'Cloud Foundry system domain'
  nfsbrokerpush.app_domain:
    description: 'domain used to host the broker app'
  nfsbrokerpush.cf.admin_user:
    description: 'username of the CF admin user'
  nfsbrokerpush.cf.admin_password:
    description: 'password of the CF admin user'
  nfsbrokerpush.cf.client_id:
    description: 'ID of the CF client'
  nfsbrokerpush.cf.client_secret:
    description: 'Secret of the CF client'
  nfsbrokerpush.cf.dial_timeout:
    description: 'CF CLI connection dial timeout'
    default: 5
  nfsbrokerpush.organization:
    description: 'organization that hosts the app'
  nfsbrokerpush.space:
    description: 'space that hosts the app'
  nfsbrokerpush.memory_in_mb:
    description: 'amount of memory allocated to the broker app'
    default: 256
  nfsbrokerpush.username:
    description: 'service broker username'
  nfsbrokerpush.password:
    description: 'service broker password'
  nfsbrokerpush.service_name:
    description: 'service name in marketplace'
    default: nfs
  nfsbrokerpush.db.driver:
    description: 'mysql or postgres'
    default: mysql
  nfsbrokerpush.db.host:
    description: 'database host'
  nfsbrokerpush.db.port:
    description: 'database port'
    default: 3306
  nfsbrokerpush.db.username:
    description: 'database username'
  nfsbrokerpush.db.password:
    description: 'database password'
  nfsbrokerpush.db.name:
    description: 'database name'
  nfsbrokerpush.db.ca_cert:
    default: ""
    description: "(optional) CA Cert to verify database SSL connection. If not included connection will not be encrypted"
  nfsbrokerpush.credhub.url:
    default: ""
    description: "(optional) CredHub URL when using CredHub to store broker state"
  nfsbrokerpush.credhub.uaa_client_id:
    default: ""
    description: "(optional) UAA client ID when using CredHub to store broker state"
  nfsbrokerpush.credhub.uaa_client_secret:
    default: ""
    description: "(optional) UAA client secret when using CredHub to store broker state"
  nfsbrokerpush.store_id:
    default: "nfsbroker"
    description: "(optional) Store ID used to namespace instance details and bindings in store (CredHub only)"
  nfsbrokerpush.syslog_url:
    description: 'external log service URL'
  nfsbrokerpush.error_on_misconfiguration:
    description: 'throw error on service misconfiguration during deployment'
    default: true
  nfsbrokerpush.skip_cert_verify:
    description: 'true if the cf api uses test certs that should not be verified'
    default: false
  nfsbrokerpush.ldap_enabled:
    description: 'true if the broker should use ldap username/password bind config instead of uid/gid'
    default: false
  nfsbrokerpush.ldap_test_mode:
    description: 'true if the broker should allow either ldap username/password bind config or uid/gid'
    default: false
  nfsbrokerpush.register_broker:
    description: 'true if the errand should register the service broker after pushing it to cf'
    default: true
  nfsbrokerpush.app_name:
    description: 'application name to use when pushing the broker to cloud foundry and setting the route'
    default: nfsbroker
  nfsbrokerpush.create_sql_security_group:
    description: 'true if the errand should create a security group to allow traffic to any ip on ports 3306,5432'
    default: true
  nfsbrokerpush.create_credhub_security_group:
    description: 'true if the errand should create a security group to allow traffic to any ip on ports 8443,8844'
    default: false
  nfsbrokerpush.broker_name:
    description: 'name of the service broker registered in CF'
    default: nfsbroker
  nfsbrokerpush.services:
    description: "List of services and plans supported by broker"
    default:
    - id: nfsbroker
      name: "nfs-legacy"
      description: "Existing NFSv3 volumes (Deprecated)"
      bindable: true
      plan_updatable: false
      tags: ["nfs", "legacy"]
      requires: ["volume_mount"]
      plans:
      - id: Existing
        name: "Existing"
        description: "A preexisting filesystem"
    - id: "997f8f26-e10c-11e7-80c1-9a214cf093ae"
      name: "nfs"
      description: "Existing NFSv3 and v4 volumes (see: https://code.cloudfoundry.org/nfs-volume-release/)"
      bindable: true
      plan_updatable: false
      tags: ["nfs"]
      requires: ["volume_mount"]
      plans:
      - id: 09a09260-1df5-4445-9ed7-1ba56dadbbc8
        name: "Existing"
        description: "A preexisting filesystem"
  nfsbrokerpush.log_level:
    description: "nfsbroker log level"
    default: "info"
  nfsbrokerpush.log_time_format:
    description: "Format for timestamp in component logs. Valid values are 'unix-epoch' and 'rfc3339'."
    default: "rfc3339"
