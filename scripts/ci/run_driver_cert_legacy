#!/bin/bash

set -x -e

### Install ruby and the the bosh cli
sudo apt-get update
sudo apt-get --assume-yes install autoconf automake libtool xsltproc libfuse-dev fuse nfs-common

pushd lib-nfs
    libtoolize
    aclocal
    autoheader
    autoconf
    automake --add-missing
    ./configure
    make install
popd

export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH

pushd fuse-nfs
    ./setup.sh
    ./configure
    make
    make install
popd

export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH

######################################################################################
#### prepare for acceptance
######################################################################################

SOURCE="$(cat nfs-volume-info/fuse-nfs-volume-info)"
export SOURCE

pushd nfs-volume-release
  export GOROOT=/usr/local/go
  export PATH=$GOROOT/bin:$PATH

  export GOPATH=$PWD
  export PATH=$PWD/bin:$PATH

  go get github.com/onsi/ginkgo/ginkgo
  go get github.com/onsi/gomega

  NFS_ACCEPTANCE_DIR="${PWD}/tmp"
  mkdir -p "${NFS_ACCEPTANCE_DIR}"

  listen_address=0.0.0.0:7589

  drivers_path="${NFS_ACCEPTANCE_DIR}/voldriver_plugins"

  if [ "$TRANSPORT" == "tcp" ]
      then
          listen_address=0.0.0.0:7589
          driver_address=http://$listen_address
  else
      listen_address=$drivers_path/nfsv3driver.sock
      driver_address=$drivers_path/nfsv3driver.sock
  fi

  export FIXTURE_FILENAME="${NFS_ACCEPTANCE_DIR}/fixture.json"
  cat << EOT > "${FIXTURE_FILENAME}"
{
  "volman_driver_path": "${drivers_path}",
  "driver_address": "${driver_address}",
  "driver_name": "nfsv3driver",
  "create_config": {
    "Name": "nfs-volume-name",
    "Opts": {"source":"${SOURCE}","uid":"2000","gid":"2000"}
  }
}
EOT

  pushd src/code.cloudfoundry.org/nfsv3driver
    go build -o "${NFS_ACCEPTANCE_DIR}/nfsv3driver" "cmd/nfsv3driver/main.go"

    go get -t code.cloudfoundry.org/volume_driver_cert

    mkdir -p "${NFS_ACCEPTANCE_DIR}/mountdir"

    "${NFS_ACCEPTANCE_DIR}/nfsv3driver" -listenAddr="$listen_address" -transport="$TRANSPORT" -driversPath="$drivers_path" \
          --allowed-in-source="uid,gid" \
          --default-in-source="" \
          --allowed-in-mount="auto_cache" \
          --default-in-mount="" \
          --logLevel="debug" &
  popd

  ginkgo -v -keepGoing src/code.cloudfoundry.org/volume_driver_cert -race

  killall -9 nfsv3driver || true

  rm -rf "${NFS_ACCEPTANCE_DIR}"
popd
